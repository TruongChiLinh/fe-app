name: Deploy React App (FE)

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install dependencies
        run: yarn install

      - name: Build React App
        run: yarn build

      - name: Sync to S3
        run: aws s3 sync build/ s3://linhct-bucket
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: '${{secrets.REGION}}'

  docker:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/fe-app-demo:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/fe-app-demo:latest
  deploy:
    needs: docker
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS credentials for EKS
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.REGION }}

      - name: Update kubeconfig for EKS
        run: |
          aws eks update-kubeconfig --name ${{EKS_CLUSTER_NAME}} --region ${{ secrets.REGION }}

      - name: Get Kubernetes Nodes
        run: kubectl get nodes
      # - name: Deploy to EKS
      #   run: |
      #     if [ "${{ github.ref }}" == "refs/heads/master" ]; then
      #       kubectl apply -f k8s/deployment.yml --namespace=prod
      #     elif [ "${{ github.ref }}" == "refs/heads/staging" ]; then
      #       kubectl apply -f k8s/deployment.yml --namespace=stag
      #     fi